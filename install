#!/bin/bash

# Script to install dotfiles and setup related environ
# Anon Ray <rayanon@riseup.net>
# BSD-3-Clause License

# Check if zsh, tmux, vim, git are installed. If not install them.
# Create symlinks from files inside this repo to config file in user's home
# directory

# These are the requirements for my environ
CORE_REQUIREMENTS=( zsh tmux vim git emacs ssh htop tree)

is_installed() {
  req=$1
  # To find out a program is installed from shell script might not be
  # straightforward and consistent. See this answer for more details:
  # http://stackoverflow.com/questions/592620/how-to-check-if-a-program-exists-from-a-bash-script#677212
  if $(command -v "$req" > /dev/null); then # if found
    return 0
  else
    return 1
  fi
}

check_core_requirements() {
  for req in "${CORE_REQUIREMENTS[@]}"
  do
    if ! $(is_installed $req); then
      to_install=( "${to_install[@]}" $req )
    fi
  done
  if [ -z "${to_install[0]}" ]; then
    echo "All requirements satisfy.."
    return 0
  else
    return 1
  fi
}

install_core_requirements() {
  packages=(${to_install[@]})

  # Check the system - and decide the package manager
  # TODO: add arch
  if $(is_installed apt-get); then # apt based distro
    package_manager="apt-get"
  else
    if $(is_installed yum); then # yum based distro
      package_manager="yum"
    fi
  fi
  if [ -z "$package_manager" ]; then
    echo "Oops! Could not find any known package manager!"
    echo "Maybe you can modify the script to add your package manager.."
    exit 1
  fi

  echo "Found package manager: $package_manager"
  echo "Packages to be insalled: ${packages[@]}"
  read -p "Continue? [y/N]: "

  if [ $REPLY != "y" ]; then
    echo "Installation aborted."
    exit 0
  fi

  echo "sudo $package_manager install -y ${packages[@]}"
  # System-wide installation; use sudo
  sudo $package_manager install -y ${packages[@]}
}

create_symlinks() {
  echo "Creating symlinks for necessary files.."
  ln -sf ~/dotfiles/vim ~/.vim
  ln -sf ~/dotfiles/vim/vimrc ~/.vimrc
  ln -sf ~/dotfiles/zshrc ~/.zshrc
  ln -sf ~/dotfiles/tmux.conf ~/.tmux.conf
  ln -sf ~/dotfiles/tmux/init.sh ~/.tmux-session-init.sh
  ln -sf ~/dotfiles/tmux/tmuxline.conf ~/.tmuxline.conf
  ln -sf ~/dotfiles/gitconfig ~/.gitconfig
  ln -sf ~/dotfiles/aliases ~/.aliases
}


# install extras
oh_my_zsh_dir="$HOME/.oh-my-zsh"

install_oh_my_zsh() {
  repo_url="git://github.com/robbyrussell/oh-my-zsh.git"
  echo "Cloning oh-my-zsh.."
  git clone $repo_url $oh_my_zsh_dir
  source ~/.zshrc
}

set_zsh_default() {
  echo "Setting zsh to be default shell.."
  chsh -s $(which zsh)
}


# install the core + extras..
install() {
  if check_core_requirements; then
    if [ ! -d $oh_my_zsh_dir ]; then
      set_zsh_default && install_oh_my_zsh
    fi
    create_symlinks
    exit 0 # all requirements satisfy
  else
    install_core_requirements && create_symlinks &&\
      set_zsh_default && install_oh_my_zsh

    echo "Done"
    exit 0
  fi
}

install
